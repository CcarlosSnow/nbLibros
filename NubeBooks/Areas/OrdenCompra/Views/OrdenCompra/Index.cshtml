@using System.Collections.Generic;
@using System.Globalization;
@using NubeBooks.Core.Logistics.DTO;
@model List<OrdenCompraDTO>
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="bg-light lter b-b wrapper-md">
    <button id="exportar" class="btn m-b-xs btn-sm btn-info btn-addon pull-right m-l open-modal" data-toggle="modal" data-target="#modal-form-exportar"><i class="fa fa-cloud-download"></i>Exportar</button>
    <a href="@Url.Action("Nuevo", "OrdenCompra")" class="btn m-b-xs btn-sm btn-success btn-addon pull-right"><i class="fa fa-plus"></i>Agregar Nuevo</a>
    <h1 class="m-n font-thin h3">Orden de Compra</h1>
</div>
<div class="alert alert-success hidden">
    <button type="button" class="close" data-dismiss="alert">×</button>
    <i class="fa fa-ok-sign"></i> <strong>Success.</strong> Archivo generado exitosamente
</div>
@Html.Partial("_showAlertMessages")
<div class="wrapper-md">
    <div class="panel panel-default">
        <div class="table-responsive">
            <table ui-jq="dataTable" ui-options="{
    oLanguage: {
        sLengthMenu: 'Mostrar _MENU_ registros',
        sSearch: 'Buscar:',
        sZeroRecords: 'No se encontraron registros que cumplan los términos de búsqueda.',
        sLoadingRecords: 'Cargando...',
        sInfo: 'Mostrando _START_-_END_ de _TOTAL_ registros.',
        sInfoEmpty: 'Mostrando _END_ de _TOTAL_ registros',
        sInfoFiltered: '(filtrados de un total _MAX_).',
        sEmptyTable: 'No hay información disponible para mostrar.',
        sProcessing: 'DataTables is currently busy',
        oPaginate: {
            sPrevious: 'Anterior',
            sNext: 'Siguiente'
        }
    }
}" class="table table-striped b-t b-b dataTable">
                <thead>
                    <tr>
                        <th>Codigo</th>
                        <th>Fecha</th>
                        <th>Proveedor</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Count > 0)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.CodigoOrdenCompra</td>
                                <td>@Html.DisplayFor(model => item.Fecha)</td>
                                <td>@item.Proveedor.Nombre</td>
                                @{ var rIcon = ViewBag.EsUsuarioExterno ? "search" : "pencil"; var rTitle = ViewBag.EsUsuarioExterno ? "Visualizar" : "Editar"; }
                                <td class="text-center">
                                    <a href="@Url.Action("Nuevo", "OrdenCompra", new { id = item.IdOrdenCompra })"><i class="fa fa-@rIcon" title="@rTitle"></i>&nbsp;&nbsp;</a>
                                    @*<a href="@Url.Action("Detalle", "OrdenCompra", new { id = item.IdOrdenCompra })"><i class="fa fa-search" title="detalle"></i>&nbsp;&nbsp;</a>*@
                                </td>
                            </tr>
                                        }
                                    }
                </tbody>
            </table>
        </div>
    </div>
</div>